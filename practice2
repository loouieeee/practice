// practice 2.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>
using namespace std;
#include<stdio.h>
#include "stdio.h"
#include "conio.h"


int minof(int x, int y, int z) {
    if (x < y) {
        if (x < z) {
            return x;
        }
        else {
            return z;
        }
    }
    else {
        if (y < z) {
            return y;
        }
        else {
            return z;
        }
    }
}

int sum(int x, int y) {
    return x + y;
}
int diff(int x, int y) {
    return abs(x - y);  //abs绝对值。
}

int cube(int x) {
    return x * x * x;
}

int sqr(int x) {
    return x * x;
}
int pow4(int x) {
    return sqr(x) * sqr(x);
}

void hello(void) {
    printf("你好");
}
void alert(int no) {
    while (no-- > 0) {
        printf("\a");
    }
}
void put_stars(int x){
    while (x-- > 0) {
        printf("*");
    }
}
void put_nchar(int ch, int no) {
    while (no-- > 0) {
        printf("%c",ch) ;
    }
}
void fill(int vc[], int no, int x) {
    while (no-- > 0) {
        *(vc++) = x;
       
    }
}
int min_of(const int vc[], int no) {
    int min;
    min = vc[no - 1];
    no = no - 1;
    while (no--) {
        if (min > vc[no]) {
            min = vc[no];
        }
        
    }return min;
}
void rev_intary(int vc[], int no) {
    int temp;
    for (int i = 0; i < no/2; i++) {
        temp = vc[i];
       vc[i] = vc[no - i - 1];
       vc[no - i - 1] = temp;

   }
}

void intary_rcpy(int v1[],  int v2[], int no) {
    for (int i = 0; i < no; i++) {
        v2[i] = v1[no - 1 - i];
    }
}
void mat_add(int ma[2][3], int mb[2][3], int mc[2][3]) {
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 3; j++) {
            mc[i][j] = ma[i][j] + mb[i][j];
        }
    }
}
void mul(int va[2][3], int vb[3][2], int vc[2][2]) {

    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 2; j++) {
            int c = 0;
            for (int k = 0; k < 3; k++) {
                c = c + va[i][k] * vb[k][j];
            }
            vc[i][j] = c;
        }
    }
}
void score(int va[], int vb[], int vc[], double no) {
    int max1, max2, max3;
    int sum1= 0, sum2=0, sum3=0;
    double ave1, ave2, ave3;

    for (int i = 0; i < 5; i++) {
        max1 = va[5 - 1 - i];
        if (max1 < va[5 - 1 - i]) {
            max1 = va[5 - 1 - i];
        }sum1 = sum1 + va[i];
    }
    for (int i = 0; i < 5; i++) {
        max2 = vb[5 - 1 - i];
        if (max2 < vb[5 - 1 - i]) {
            max2 = vb[5 - 1 - i];
        }sum2 = sum2 + vb[i];
    }
    for (int i = 0; i < 5; i++) {
        max3 = vc[5 - 1 - i];
        if (max3 < vc[5 - 1 - i]) {
            max3 = vc[5 - 1 - i];
        }sum3 = sum3 + vc[i];
    }
    ave1 = (double)sum1 / no;
    ave2 = (double)sum2 / no;
    ave3 = (double)sum3 / no;

}
int min_of(int vc[][3], int sub, int no) {
    int min;
    min = vc[0][sub];
    no = no;  //这里没啥意义
    while (no-- > 0) {
        if (min > vc[no][sub]) {
            min = vc[no][sub];
        }
    }return min;
}
int max_of(int vc[][3], int sub, int no) {
    int max;
    max = vc[0][sub];
    no = no;  //同上
    while (no-- > 0) {
        if (max < vc[no][sub]) { max = vc[no][sub]; }
    }return max;
}

double ave_of(int vc[][3], int sub, int no) {
    int ave, i;
    i = no;
    ave = 0;
    while (i-- > 0) {
        ave = ave + vc[i][sub];
    }return (double)ave / no;
}

//int prize(int vc[], int no) {
//    int temp[] = { 0 };
//    for (int i = 0; i < no; i++) {
//        if (vc[i] >= 60) {
//            temp[i] = vc[i];
//        }
//
//    }return temp[no];
//}
void prize(int score[], int no) {
    int i;
    printf("合格者一览：\n");
    printf("--------------------\n");
    for (i = 0; i < no; i++) {
        if (score[i] >= 60) {
            printf("第%d位\t分数: %d\n", i + 1, score[i]);
        }
    }    printf("--------------------\n");

}
//static int sx = 0;
//static int fx = 0;
//int ax = 0;
//void func() {
    //int ax = 0;
    //static int fx = 0;
   // printf("%3d%3d%3d\n", ax++, sx++, fx++);
//}

static int sx[5];
void func(int i) {
    static int fx[5];
    int ax[5];
    printf("%3d%3d%3d\n", ax[i], sx[i], fx[i]);
}




int main()
{
    int i;
    puts("结果");
    puts("-----------");
    for (i = 0; i < 5; i++){
        func(i);
    }
    puts("-----------");
    
    
    
    /*int i;
    puts("ax  sx  fx\n");
    puts("---------------\n");
    for (i = 0; i < 10; i++) {
        func();
    }
    puts("---------------\n");*/








    /*int score[5] = { 0 };
    
    printf("请输入五人成绩:\n");
    for (int i = 0; i < 5; i++) {
        printf("第%d位：",i + 1);
        scanf_s("%d", &score[i]);
    }
    printf("\n");
    
    prize(score, 5);*/
    
    
    
    
    
    /* int subject[5][3] = { 0 };
    printf("输入五人成绩：\n");
    for (int i = 0; i < 5; i++) {
        printf("第%d人:\t国语:  ", i + 1);
        scanf_s("%d", &subject[i][0]);
        printf("\t数学： ");
        scanf_s("%d", &subject[i][1]);
        printf("\t英语： ");
        scanf_s("%d", &subject[i][2]);
    }

    printf("\n");
    printf("No.\t国语\t数学\t英语\n");
    printf("-------------------------------\n");
    for (int i = 0; i < 5; i++) {
        printf("%d\t%d\t%d\t%d\n", i + 1, subject[i][0], subject[i][1], subject[i][2]);
    }
    printf("-------------------------------\n");
    printf("【国语】最高点：%d\n", max_of(subject, 0, 5));
    printf("        最低点：%d\n", min_of(subject, 0, 5));
    printf("        平均点：%.1lf\n", ave_of(subject, 0, 5));
    printf("【数学】最高点：%d\n", max_of(subject, 1, 5));
    printf("        最低点：%d\n", min_of(subject, 1, 5));
    printf("        平均点：%.1lf\n", ave_of(subject, 1, 5));
    printf("【英语】最高点：%d\n", max_of(subject, 2, 5));
    printf("        最低点：%d\n", min_of(subject, 2, 5));
    printf("        平均点：%.1lf\n", ave_of(subject, 2, 5));
    printf("\n");
    printf("各学生三科平均点：\n");
        for (int i = 0; i < 5; i++) {
            printf("学生%d：%.1lf\n", i + 1, (double)(subject[i][0] + subject[i][1] + subject[i][2]) / 3.0);
    }
    printf("\n");*/


       
       




   /*int ma[2][3] = { { 1,2,3 },{ 4,5,6 } };
   int mb[3][2] = { { 1,5 }, { 5,3 },{ 8, 1 } };
   int mc[2][2] = { 0 };

   mul(ma, mb,mc);

   for (int i = 0; i < 2; i++) {
       for (int j = 0; j < 2; j++) {
           printf("%d ", mc[i][j]);
       }printf("\n");
   }*/
   





   /* int ma[2][3] = { 1,2,3,4,5,6 };
    int mb[2][3] = { 6,5,4,3,2,1 };
    int mc[2][3] = { 0 };
    mat_add(ma, mb, mc);
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 3; j++) {
            printf("mc[%d][%d] = %d ", i, j, mc[i][j]);
        }
        printf("\n");
    }*/


    
    
    
    
    /* int arr[5] = { 5,4,3,2,1 };
    for (int i = 0; i < 5; i++) {
        printf("arr[%d] = %d ", i, arr[i]);
    }
    int arr2[5] = { 0 };
    intary_rcpy(arr, arr2, 5);
    for (int i = 0; i < 5; i++) {
        printf("arr2[%d] = %d ", i, arr2[i]);
    }*/






    /*int arr[5] = { 5,4,3,2,1 };
    for (int i = 0; i < 5; i++) {
        printf("arr[%d] = %d ", i, arr[i]);
    }
    rev_intary(arr, 5);
    printf("\n");
    for (int i = 0; i < 5; i++) {
        printf("arr[%d] = %d ", i, arr[i]);
    }*/
    
    
    
    //std::cout << "Hello World!\n";

   /* int n1, n2,n3;
    printf("输入数n1: ");
    scanf_s("%d", &n1);
    printf("输入数n2: ");
    scanf_s("%d", &n2);
    printf("输入数n3: ");
    scanf_s("%d", &n3);
    printf("最小值是：%d\n", minof(n1, n2,n3));

    printf("两个数的和是：%d ", sum(n1, n2));
    printf("两个数的差是：%d\n", diff(n1, n2));

    printf("数1的立方是：%d\n", cube(n1));
    printf("数1的平方是：%d\n", sqr(n1));
    printf("数1的四次方是：%d\n",pow4(n1));*/
    //hello();
   // alert(n1);
    /*int n1;
    int n2;
    printf("请输入星星列数: ");
    scanf_s("%d", &n1);
    printf("请输入星星行数: ");
    scanf_s("%d", &n2);
   
    while (n2-- > 0) {
        for (int i = 0; i < n2; i++) {
            printf(" ");
        }
        put_nchar('+', n1);
        printf("\n");
    }*/

  /*  int vc[10];
    fill(vc, 5, 2);
    for (int i = 0; i < 5; i++) {
        printf("va[%d] = %d\n", i, vc[i]);
    }*/
   
    /*int arr[9] = { 4,2,3,6,5,8,1,7,9 };
    int temp;
    printf("冒泡前：");
    for (int i = 0; i < 9; i++) {
        printf("%d ", arr[i]);
    }
    for (int i = 0; i < 9-1; i++) {
        for (int j = 0; j < 9 - i-1; j++) {


            if (arr[j] > arr[j + 1]) {
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
    printf("冒泡后：");
    for (int j = 0; j < 9; j++) {
        printf("%d ", arr[j]);
    }*/

   /* int math[5]; int eng[5];
    printf("输入五人分数：\n");
    for (int i = 0; i < 5; i++) {
        printf("[%1d] 英语:", i + 1);
        scanf_s("%d", &eng[i]);
        printf("   数学：");
        scanf_s("%d", &math[i]);

    }
    printf("英语最低点:%d\n", min_of(eng, 5));
    printf("数学最低点:%d\n", min_of(math, 5));*/

   






    





}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
