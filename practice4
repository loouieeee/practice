// practice4.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>
using namespace std;
#include<ctime>

int nx;

void sum_diff_mul(int n1, int n2, int* sum, int* diff, int* mul) {
	*sum = n1 + n2;
	*diff = n1 - n2;
	*mul = n1 * n2;
}

struct student {
	string sName;
	//int age;
	int score;
};

struct teacher {
	string tName;
	struct student sArray[5];
};

void allocateSpace(struct teacher tArray[], int len) {
	string nameseed = "ABCDE";
	for (int i = 0; i < len; i++) {
		tArray[i].tName = "Teacher_";
		tArray[i].tName += nameseed[i];
		for (int j = 0; j < 5; j++) {
			tArray[i].sArray[j].sName = "Student_";
			tArray[i].sArray[j].sName += nameseed[j];

			int random = rand() % 61 + 40;
			tArray[i].sArray[j].score = random;
		}
	}
}

void printinfo(struct teacher tArray[], int len) {
	for (int i = 0; i < len; i++) {
		cout << "老师名字：" << tArray[i].tName << endl;
		for (int j = 0; j < 5; j++) {
			cout << "\t学生名字：" << tArray[i].sArray[j].sName << " 考试分数：" << tArray[i].sArray[j].score <<
				endl;
		}
	}
}

int main()
{
	srand((unsigned int)time(NULL));

	struct teacher tArray[3];
	
	int len = sizeof(tArray) / sizeof(tArray[0]);
	allocateSpace(tArray, len);
	printinfo(tArray, len);


	/*struct student stu = { "张三",18,100 };
	struct student* p = &stu;
	cout << "姓名：" << p->name << " 年龄：" << p->age << " 成绩：" << p->score << endl;*/


	/*int a, * ap = &a;
	int b, * bp = &b;
	int sum, * sump = &sum;
	int diff, * diffp = &diff;
	int mul, * mulp = &mul;

	printf("请输入两个整数：\n");
	printf("整数A：");
	scanf_s("%d", &a);
	printf("整数B：");
	scanf_s("%d", &b);
	sum_diff_mul(a, b, sump, diffp, mulp);

	printf("和是：%d\n", sum);
	printf("差是：%d\n", diff);
	printf("积是：%d\n", mul);*/




	/*int a; int* ap = &a;
	int b; int* bp = &b;
	int temp;
	printf("请输入两个整数：\n");
	printf("整数A：");
	scanf_s("%d", &a);
	printf("整数B：");
	scanf_s("%d", &b);
	temp = *ap;
	*ap = *bp;
	*bp = temp;

	printf("整数A = %d\n", a);
	printf("整数B = %d\n", b);*/

	
	
	
	
	/*static double dx;
	static int vc[3];
	printf("nx的地址：%p\n", &nx);
	printf("dx的地址：%p\n", &dx);
	printf("vc[0]的地址：%p\n", &vc[0]);
	printf("vc[1]的地址：%p\n", &vc[1]);
	printf("vc[2]的地址：%p\n", &vc[2]);*/
	
	
	
	
	
	
	
	
	
	
	// std::cout << "Hello World!\n";
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
